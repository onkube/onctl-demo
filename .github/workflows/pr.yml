name: onctl-pr

on:
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize, closed]

env:
  CLOUD_PROVIDER: hetzner

jobs:
  preview-env:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Install onctl
        run: |
          # wget https://github.com/onkube/homebrew-tap/releases/download/v0.0.33/onctl-linux-amd64.tar.gz
          # tar -xzf onctl-linux-amd64.tar.gz
          # chmod +x onctl
          # sudo mv onctl /usr/local/bin/onctl
          wget https://github.com/onkube/homebrew-tap/releases/download/test/onctl-linux
          chmod +x onctl-linux
          sudo mv onctl-linux /usr/local/bin/onctl
          onctl version
      - name: ls
        run: |
          ls -al ~/.ssh
          sha256sum ~/.ssh/id_rsa
          cat ~/.ssh/known_hosts
          echo $SSH_PUBLIC_KEY > ~/.ssh/id_rsa.pub
          cat ~/.ssh/id_rsa.pub
          sha256sum ~/.ssh/id_rsa.pub
          onctl ls
          env
          if [ -z CI ]; then echo "CI is empty"; else echo $CI; fi
          echo ${{ github.event.action }}
          echo $GITHUB_EVENT_PATH
          cat $GITHUB_EVENT_PATH
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      - name: deploy
        if: github.event.action != 'closed'
        run: |
          cd $GITHUB_WORKSPACE
          CLOUD_PROVIDER=hetzner ONCTL_LOG=DEBUG onctl deploy -p 80 -i init.sh -t t3.small
          ls -al
          cat onctl-deploy.json
          ssh-keyscan $(cat ip.txt) >> ~/.ssh/known_hosts
          DOCKER_HOST=ssh://ubuntu@$(cat ip.txt) docker compose up -d --build
          # gh pr comment ${{ github.event.pull_request.number }} -b "Deployed to http://$(cat ip.txt):8080" 
          gh pr comment ${{ github.event.pull_request.number }} -b "Deployed to $(cat onctl-deploy.json | jq -r '.public_url')"
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          GH_TOKEN: ${{ github.token }}
      - name: destroy
        if: github.event.action == 'closed'
        run: |
          cd $GITHUB_WORKSPACE
          ONCTL_LOG=DEBUG onctl delete self
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          GH_TOKEN: ${{ github.token }}
