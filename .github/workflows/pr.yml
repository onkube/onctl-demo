name: ontest-pr

on:
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build-image:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: onctl

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Install ontest
        run: |
          wget https://github.com/onkube/homebrew-tap/releases/download/v0.0.29/ontest-linux-amd64.tar.gz
          tar -xzf ontest-linux-amd64.tar.gz
          sudo mv ontest /usr/local/bin
      - name: ls
        run: |
          ls -al ~/.ssh
          sha256sum ~/.ssh/id_rsa
          cat ~/.ssh/known_hosts
          echo $SSH_PUBLIC_KEY > ~/.ssh/id_rsa.pub
          cat ~/.ssh/id_rsa.pub
          sha256sum ~/.ssh/id_rsa.pub
          ontest ls
          env
          if [ -z CI ]; then echo "CI is empty"; else echo $CI; fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      - name: deploy
        run: |
          set -ex
          cd $GITHUB_WORKSPACE
          ls -al
          docker info
          docker compose 
          # ontest deploy -p 8080 -i init.sh
          # ssh-keyscan $(cat ip.txt) >> ~/.ssh/known_hosts
          # cat ~/.ssh/known_hosts
          # DOCKER_HOST=ssh://ubuntu@$(cat ip.txt) docker compose up -d
          echo "127.0.0.1" > ip.txt
          echo github.event.number = ${{ github.event.number  }}
          echo github.event.pull_request.number = ${{ github.event.pull_request.number }}
          echo github.event.issue.number = ${{ github.event.issue.number }}
          gh pr comment ${{ github.event.pull_request.number }} -b "Deployed to http://$(cat ip.txt):8080" 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          GH_TOKEN: ${{ github.token }}
