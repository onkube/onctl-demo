name: onctl-pr

on:
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize, closed]

env:
  CLOUD_PROVIDER: ${{ vars.CLOUD_PROVIDER }}
  HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  GH_TOKEN: ${{ github.token }}

jobs:
  preview-env:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Install onctl
        run: |
          wget https://github.com/onkube/homebrew-tap/releases/download/v0.0.37/onctl-linux-amd64.tar.gz
          tar -xzf onctl-linux-amd64.tar.gz
          chmod +x onctl
          sudo mv onctl /usr/local/bin/onctl
          onctl version
          echo $SSH_PUBLIC_KEY > ~/.ssh/id_rsa.pub
      - name: deploy
        if: github.event.action != 'closed'
        run: |
          cd $GITHUB_WORKSPACE
          onctl deploy -p 80 
          ls -al
          cat onctl-deploy.json
          ssh-keyscan $(cat onctl-deploy.json | jq -r '.public_ip') >> ~/.ssh/known_hosts
          DOCKER_HOST=$(cat onctl-deploy.json | jq -r '.docker_host') docker compose up -d --build
          gh pr comment ${{ github.event.pull_request.number }} -b "Deployed to $(cat onctl-deploy.json | jq -r '.public_url')"
      - name: destroy
        if: github.event.action == 'closed'
        run: |
          cd $GITHUB_WORKSPACE
          onctl delete self
